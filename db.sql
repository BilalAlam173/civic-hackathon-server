-- MySQL Script generated by MySQL Workbench
-- Sat Oct 21 02:21:00 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db` DEFAULT CHARACTER SET utf8 ;
USE `db` ;

-- -----------------------------------------------------
-- Table `db`.`Citizen`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Citizen` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `FullName` VARCHAR(255) NULL,
  `Email` VARCHAR(255) NULL,
  `Phone` VARCHAR(255) NULL,
  `CNIC` VARCHAR(255) NULL,
  `Address` VARCHAR(1000) NULL,
  `Town` VARCHAR(255) NULL,
  `City` VARCHAR(255) NULL,
  `PostalCode` VARCHAR(255) NULL,
  `Password` VARCHAR(255) NULL,
  `DOB` VARCHAR(255) NULL,
  `Profession` VARCHAR(255) NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Authority`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Authority` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FullName` VARCHAR(255) NULL,
  `Email` VARCHAR(255) NULL,
  `Designation` VARCHAR(255) NULL,
  `Phone` VARCHAR(255) NULL,
  `Address` VARCHAR(255) NULL,
  `DOB` VARCHAR(255) NULL,
  `Password` VARCHAR(255) NULL,
  `Authoritycol` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Journalist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Journalist` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `FullName` VARCHAR(255) NULL,
  `Email` VARCHAR(255) NULL,
  `Phone` VARCHAR(255) NULL,
  `Designation` VARCHAR(255) NULL,
  `Firm` VARCHAR(255) NULL,
  `IsApproved` VARCHAR(255) NULL,
  `Password` VARCHAR(255) NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Issue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Issue` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(255) NULL,
  `Description` VARCHAR(255) NULL,
  `IsSolved` VARCHAR(255) NULL,
  `IsCovered` VARCHAR(255) NULL,
  `Priority` INT NULL,
  `Category` VARCHAR(255) NULL,
  `Location` VARCHAR(255) NULL,
  `Date` VARCHAR(255) NULL,
  `Citizen_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_Issue_Citizen_idx` (`Citizen_Id` ASC),
  CONSTRAINT `fk_Issue_Citizen`
    FOREIGN KEY (`Citizen_Id`)
    REFERENCES `db`.`Citizen` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Alert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Alert` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(255) NULL,
  `Description` VARCHAR(255) NULL,
  `Alertcol` VARCHAR(255) NULL,
  `Authority_ID` INT NOT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC),
  INDEX `fk_Alert_Authority1_idx` (`Authority_ID` ASC),
  CONSTRAINT `fk_Alert_Authority1`
    FOREIGN KEY (`Authority_ID`)
    REFERENCES `db`.`Authority` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Location` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Lat` VARCHAR(255) NULL,
  `Long` VARCHAR(255) NULL,
  `Issue_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Location_Issue1_idx` (`Issue_Id` ASC),
  CONSTRAINT `fk_Location_Issue1`
    FOREIGN KEY (`Issue_Id`)
    REFERENCES `db`.`Issue` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Issue_Citizen_Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Issue_Citizen_Relation` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Date` VARCHAR(255) NULL,
  `Issue_Id` INT NOT NULL,
  `Citizen_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Issue_Citizen_Relation_Issue1_idx` (`Issue_Id` ASC),
  INDEX `fk_Issue_Citizen_Relation_Citizen1_idx` (`Citizen_Id` ASC),
  CONSTRAINT `fk_Issue_Citizen_Relation_Issue1`
    FOREIGN KEY (`Issue_Id`)
    REFERENCES `db`.`Issue` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Issue_Citizen_Relation_Citizen1`
    FOREIGN KEY (`Citizen_Id`)
    REFERENCES `db`.`Citizen` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db`.`Journalist_Issue_Relation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db`.`Journalist_Issue_Relation` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Date` VARCHAR(45) NULL,
  `Journalist_Id` INT NOT NULL,
  `Issue_Id` INT NOT NULL,
  `CommentTitle` VARCHAR(45) NULL,
  `CommentMessage` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_Journalist_Issue_Relation_Journalist1_idx` (`Journalist_Id` ASC),
  INDEX `fk_Journalist_Issue_Relation_Issue1_idx` (`Issue_Id` ASC),
  CONSTRAINT `fk_Journalist_Issue_Relation_Journalist1`
    FOREIGN KEY (`Journalist_Id`)
    REFERENCES `db`.`Journalist` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Journalist_Issue_Relation_Issue1`
    FOREIGN KEY (`Issue_Id`)
    REFERENCES `db`.`Issue` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
